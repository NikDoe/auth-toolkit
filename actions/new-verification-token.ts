'use server'

import { db } from "@/lib/db";

import { getUserByEmail } from "@/data/user";
import { getVerificationTokenByToken } from "@/data/verification-token"

export const newVerificationToken = async (
	token: string,
) => {
	console.log('–õ–û–§–í–í–õ–ê', token);

	const existingToken = await getVerificationTokenByToken(token);

	if (!existingToken) {
		return { error: '—Ç–æ–∫–µ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' };
	}

	const hasExpired = new Date(existingToken.expires) < new Date();

	if (hasExpired) {
		return { error: '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π —Ç–æ–∫–µ–Ω–∞ –∏—Å—Ç—ë–∫' };
	}

	const existingUser = await getUserByEmail(existingToken.email);

	if (!existingUser) {
		return { error: '—Ç–∞–∫–æ–≥–æ email –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' };
	}

	await db.user.update({
		where: { id: existingUser.id },
		data: {
			emailVerified: new Date(),
			email: existingToken.email,
		},
	})

	await db.verificationToken.delete({
		where: { id: existingToken.id },
	})

	return { success: 'email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω üòä' }
}